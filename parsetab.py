
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CLASS IDENTIFIER LBRACE LPAREN PUBLIC RBRACE RPAREN SEMICOLON VOIDclass_declaration : CLASS IDENTIFIER LBRACE method_declaration_list RBRACEmethod_declaration : PUBLIC VOID IDENTIFIER LPAREN RPAREN LBRACE RBRACEmethod_declaration_list : method_declaration \n                                | method_declaration_list method_declaration'
    
_lr_action_items = {'CLASS':([0,],[2,]),'$end':([1,8,],[0,-1,]),'IDENTIFIER':([2,10,],[3,11,]),'LBRACE':([3,13,],[4,14,]),'PUBLIC':([4,5,6,9,15,],[7,7,-3,-4,-2,]),'RBRACE':([5,6,9,14,15,],[8,-3,-4,15,-2,]),'VOID':([7,],[10,]),'LPAREN':([11,],[12,]),'RPAREN':([12,],[13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'class_declaration':([0,],[1,]),'method_declaration_list':([4,],[5,]),'method_declaration':([4,5,],[6,9,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> class_declaration","S'",1,None,None,None),
  ('class_declaration -> CLASS IDENTIFIER LBRACE method_declaration_list RBRACE','class_declaration',5,'p_class_declaration','jparser.py',45),
  ('method_declaration -> PUBLIC VOID IDENTIFIER LPAREN RPAREN LBRACE RBRACE','method_declaration',7,'p_method_declaration','jparser.py',49),
  ('method_declaration_list -> method_declaration','method_declaration_list',1,'p_method_declaration_list','jparser.py',53),
  ('method_declaration_list -> method_declaration_list method_declaration','method_declaration_list',2,'p_method_declaration_list','jparser.py',54),
]
